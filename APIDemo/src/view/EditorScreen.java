package view;

/**
 *
 * @author Carlos Esquivel
 */
public class EditorScreen extends javax.swing.JFrame {
    
    /**
     * Creates new form EditorScreen
     */
    public EditorScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel contentPane = new javax.swing.JPanel();
        JTabbedPane = new javax.swing.JTabbedPane();
        CharactersTab = new javax.swing.JPanel();
        pnlCharSpritePreview = new javax.swing.JPanel();
        lblCharSpritePreview = new javax.swing.JLabel();
        cmBxCharAppearance = new javax.swing.JComboBox<>();
        cmBxCharAppearanceLvl = new javax.swing.JComboBox<>();
        javax.swing.JLabel lblCharAppearance = new javax.swing.JLabel();
        javax.swing.JLabel lblCharAppareanceLvl = new javax.swing.JLabel();
        javax.swing.JLabel lblCharacterClass = new javax.swing.JLabel();
        cmBxCharClassSelect = new javax.swing.JComboBox<>();
        btnLoadCharClass = new javax.swing.JButton();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JSeparator jSeparator2 = new javax.swing.JSeparator();
        javax.swing.JLabel lblCharAttributes = new javax.swing.JLabel();
        javax.swing.JLabel lblCharClassName = new javax.swing.JLabel();
        txtCharClassName = new javax.swing.JTextField();
        btnAddCharAppearance = new javax.swing.JButton();
        btnCharCreateObject = new javax.swing.JButton();
        btnCharSaveClass = new javax.swing.JButton();
        chkBxCharHealth = new javax.swing.JCheckBox();
        spnCharHealth = new javax.swing.JSpinner();
        chkBxCharCost = new javax.swing.JCheckBox();
        spnCharCost = new javax.swing.JSpinner();
        chkBxCharHits = new javax.swing.JCheckBox();
        spnCharHits = new javax.swing.JSpinner();
        chkBxCharTiles = new javax.swing.JCheckBox();
        spnCharTiles = new javax.swing.JSpinner();
        chkBxCharStartLvl = new javax.swing.JCheckBox();
        spnCharStartLvl = new javax.swing.JSpinner();
        chkBxCharUnlockLvl = new javax.swing.JCheckBox();
        spnCharUnlockLvl = new javax.swing.JSpinner();
        btnDelCharAppearance = new javax.swing.JButton();
        btnAddWeapon = new javax.swing.JButton();
        javax.swing.JScrollPane scrollWeapons = new javax.swing.JScrollPane();
        listWeapons = new javax.swing.JList<>();
        javax.swing.JScrollPane scrollClassWeapons = new javax.swing.JScrollPane();
        listClassWeapons = new javax.swing.JList<>();
        btnDelWeapon = new javax.swing.JButton();
        javax.swing.JLabel lblClassWeapons = new javax.swing.JLabel();
        btnCharExportJson = new javax.swing.JButton();
        lblWeaponClassSelect1 = new javax.swing.JLabel();
        btnCharImportJson = new javax.swing.JButton();
        WeaponsTab = new javax.swing.JPanel();
        pnlWeaponSpritePreview = new javax.swing.JPanel();
        lblWeaponSpritePreview = new javax.swing.JLabel();
        javax.swing.JLabel lblWeaponAppearance = new javax.swing.JLabel();
        cmBxWeaponAppearance = new javax.swing.JComboBox<>();
        javax.swing.JSeparator jSeparator3 = new javax.swing.JSeparator();
        javax.swing.JLabel lblWeaponAppareanceLvl = new javax.swing.JLabel();
        cmBxWeaponAppearanceLvl = new javax.swing.JComboBox<>();
        btnAddWeaponAppearance = new javax.swing.JButton();
        btnDelWeaponAppearance = new javax.swing.JButton();
        javax.swing.JLabel lblCharacterClass1 = new javax.swing.JLabel();
        cmBxWeaponClassSelect = new javax.swing.JComboBox<>();
        btnLoadWeaponClass = new javax.swing.JButton();
        javax.swing.JSeparator jSeparator4 = new javax.swing.JSeparator();
        javax.swing.JLabel lblWeaponAttributes = new javax.swing.JLabel();
        javax.swing.JLabel lblWeaponClassName = new javax.swing.JLabel();
        txtWeaponClassName = new javax.swing.JTextField();
        chkBxWeaponDmg = new javax.swing.JCheckBox();
        spnWeaponDmg = new javax.swing.JSpinner();
        chkBxWeaponHits = new javax.swing.JCheckBox();
        spnWeaponHits = new javax.swing.JSpinner();
        spnWeaponStartLvl = new javax.swing.JSpinner();
        chkBxWeaponStartLvl = new javax.swing.JCheckBox();
        chkBxWeaponUnlockLvl = new javax.swing.JCheckBox();
        spnWeaponUnlockLvl = new javax.swing.JSpinner();
        spnWeaponAOE = new javax.swing.JSpinner();
        chkBxWeaponAOE = new javax.swing.JCheckBox();
        chkBxWeaponRange = new javax.swing.JCheckBox();
        spnWeaponRange = new javax.swing.JSpinner();
        btnSaveWeapon = new javax.swing.JButton();
        lblWeaponClassSelect = new javax.swing.JLabel();
        btnWeaponImportJson = new javax.swing.JButton();
        btnWeaponExportJson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Character Creation API");
        setResizable(false);

        pnlCharSpritePreview.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sprite Preview", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlCharSpritePreview.setMaximumSize(new java.awt.Dimension(250, 250));
        pnlCharSpritePreview.setPreferredSize(new java.awt.Dimension(250, 250));
        pnlCharSpritePreview.setLayout(new java.awt.BorderLayout());
        pnlCharSpritePreview.add(lblCharSpritePreview, java.awt.BorderLayout.CENTER);

        cmBxCharAppearance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmBxCharAppearanceLvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCharAppearance.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblCharAppearance.setText("Appearance:");

        lblCharAppareanceLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblCharAppareanceLvl.setText("Level:");

        lblCharacterClass.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCharacterClass.setText("Character class");

        cmBxCharClassSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnLoadCharClass.setText("Load Character Class Info");
        btnLoadCharClass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jSeparator1.setForeground(new java.awt.Color(187, 187, 187));

        jSeparator2.setForeground(new java.awt.Color(187, 187, 187));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setPreferredSize(new java.awt.Dimension(10, 50));

        lblCharAttributes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCharAttributes.setText("Attributes");

        lblCharClassName.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblCharClassName.setText("Class name:");

        txtCharClassName.setToolTipText("Class Name");

        btnAddCharAppearance.setText("Add New Character Appearance");

        btnCharCreateObject.setText("Create Character Object");

        btnCharSaveClass.setText("Save Character Class");

        chkBxCharHealth.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharHealth.setSelected(true);
        chkBxCharHealth.setText("Max Health Points (HP):");
        chkBxCharHealth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharHealthItemStateChanged(evt);
            }
        });

        spnCharHealth.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxCharCost.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharCost.setSelected(true);
        chkBxCharCost.setText("Production Cost:");
        chkBxCharCost.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharCostItemStateChanged(evt);
            }
        });

        spnCharCost.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxCharHits.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharHits.setSelected(true);
        chkBxCharHits.setText("Hits per Time unit:");
        chkBxCharHits.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharHitsItemStateChanged(evt);
            }
        });

        spnCharHits.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxCharTiles.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharTiles.setSelected(true);
        chkBxCharTiles.setText("Tile Hitbox:");
        chkBxCharTiles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharTilesItemStateChanged(evt);
            }
        });

        spnCharTiles.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxCharStartLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharStartLvl.setSelected(true);
        chkBxCharStartLvl.setText("Starting Level:");
        chkBxCharStartLvl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharStartLvlItemStateChanged(evt);
            }
        });

        spnCharStartLvl.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxCharUnlockLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxCharUnlockLvl.setSelected(true);
        chkBxCharUnlockLvl.setText("Unlocking Level:");
        chkBxCharUnlockLvl.setToolTipText("");
        chkBxCharUnlockLvl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxCharUnlockLvlItemStateChanged(evt);
            }
        });

        spnCharUnlockLvl.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnDelCharAppearance.setText("Delete Selected Character Appearance");

        btnAddWeapon.setText(">");
        btnAddWeapon.setEnabled(false);

        listWeapons.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listWeapons.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listWeapons.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listWeaponsValueChanged(evt);
            }
        });
        scrollWeapons.setViewportView(listWeapons);

        listClassWeapons.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listClassWeapons.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listClassWeapons.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listClassWeaponsValueChanged(evt);
            }
        });
        scrollClassWeapons.setViewportView(listClassWeapons);

        btnDelWeapon.setText("X");
        btnDelWeapon.setEnabled(false);

        lblClassWeapons.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblClassWeapons.setText("Weapons:");

        btnCharExportJson.setText("Export JSON Character Data");

        lblWeaponClassSelect1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblWeaponClassSelect1.setText("Select a class:");

        btnCharImportJson.setText("Import JSON Character Data");

        javax.swing.GroupLayout CharactersTabLayout = new javax.swing.GroupLayout(CharactersTab);
        CharactersTab.setLayout(CharactersTabLayout);
        CharactersTabLayout.setHorizontalGroup(
            CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CharactersTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CharactersTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCharExportJson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCharSaveClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCharCreateObject))
                    .addGroup(CharactersTabLayout.createSequentialGroup()
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CharactersTabLayout.createSequentialGroup()
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(CharactersTabLayout.createSequentialGroup()
                                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblWeaponClassSelect1)
                                            .addComponent(lblCharAttributes)
                                            .addComponent(lblCharacterClass)
                                            .addComponent(lblClassWeapons)
                                            .addComponent(cmBxCharClassSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnLoadCharClass, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCharImportJson, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CharactersTabLayout.createSequentialGroup()
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(CharactersTabLayout.createSequentialGroup()
                                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                                .addComponent(lblCharClassName)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtCharClassName))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkBxCharHits, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(chkBxCharHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(spnCharHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(spnCharHits))))
                                        .addGap(18, 18, 18)
                                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkBxCharTiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(chkBxCharCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(chkBxCharUnlockLvl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                                .addComponent(scrollWeapons, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnAddWeapon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnDelWeapon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(scrollClassWeapons, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                                .addComponent(chkBxCharStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(spnCharStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spnCharCost, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnCharTiles, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnCharUnlockLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlCharSpritePreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(CharactersTabLayout.createSequentialGroup()
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCharAppearance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCharAppareanceLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmBxCharAppearance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmBxCharAppearanceLvl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAddCharAppearance, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelCharAppearance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        CharactersTabLayout.setVerticalGroup(
            CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CharactersTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CharactersTabLayout.createSequentialGroup()
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CharactersTabLayout.createSequentialGroup()
                                .addComponent(pnlCharSpritePreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmBxCharAppearance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCharAppearance))
                                .addGap(6, 6, 6)
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmBxCharAppearanceLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCharAppareanceLvl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddCharAppearance)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelCharAppearance)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCharSaveClass)
                            .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCharCreateObject)
                                .addComponent(btnCharExportJson))))
                    .addGroup(CharactersTabLayout.createSequentialGroup()
                        .addComponent(lblCharacterClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWeaponClassSelect1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmBxCharClassSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLoadCharClass)
                            .addComponent(btnCharImportJson))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCharAttributes)
                        .addGap(18, 18, 18)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCharClassName)
                            .addComponent(txtCharClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkBxCharHealth)
                            .addComponent(spnCharCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxCharCost)
                            .addComponent(spnCharHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnCharHits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxCharHits)
                            .addComponent(spnCharTiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxCharTiles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnCharStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxCharStartLvl)
                            .addComponent(spnCharUnlockLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxCharUnlockLvl))
                        .addGap(18, 18, 18)
                        .addComponent(lblClassWeapons)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CharactersTabLayout.createSequentialGroup()
                                .addComponent(btnAddWeapon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelWeapon)
                                .addGap(61, 126, Short.MAX_VALUE))
                            .addGroup(CharactersTabLayout.createSequentialGroup()
                                .addGroup(CharactersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(scrollClassWeapons, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(scrollWeapons))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        JTabbedPane.addTab("Characters", CharactersTab);

        pnlWeaponSpritePreview.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sprite Preview", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlWeaponSpritePreview.setMaximumSize(new java.awt.Dimension(250, 250));
        pnlWeaponSpritePreview.setPreferredSize(new java.awt.Dimension(250, 250));
        pnlWeaponSpritePreview.setLayout(new java.awt.BorderLayout());
        pnlWeaponSpritePreview.add(lblWeaponSpritePreview, java.awt.BorderLayout.CENTER);

        lblWeaponAppearance.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblWeaponAppearance.setText("Appearance:");

        cmBxWeaponAppearance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jSeparator3.setForeground(new java.awt.Color(187, 187, 187));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 50));

        lblWeaponAppareanceLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblWeaponAppareanceLvl.setText("Level:");

        cmBxWeaponAppearanceLvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAddWeaponAppearance.setText("Add New Weapon Appearance");

        btnDelWeaponAppearance.setText("Delete Selected Weapon Appearance");

        lblCharacterClass1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCharacterClass1.setText("Weapon class");

        cmBxWeaponClassSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnLoadWeaponClass.setText("Load Weapon Class Info");
        btnLoadWeaponClass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jSeparator4.setForeground(new java.awt.Color(187, 187, 187));

        lblWeaponAttributes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblWeaponAttributes.setText("Attributes");

        lblWeaponClassName.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblWeaponClassName.setText("Weapon name:");

        txtWeaponClassName.setToolTipText("Class Name");

        chkBxWeaponDmg.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponDmg.setSelected(true);
        chkBxWeaponDmg.setText("Weapon Damage:");
        chkBxWeaponDmg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponDmgItemStateChanged(evt);
            }
        });

        spnWeaponDmg.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxWeaponHits.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponHits.setSelected(true);
        chkBxWeaponHits.setText("Hits per Time unit:");
        chkBxWeaponHits.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponHitsItemStateChanged(evt);
            }
        });

        spnWeaponHits.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        spnWeaponStartLvl.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxWeaponStartLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponStartLvl.setSelected(true);
        chkBxWeaponStartLvl.setText("Starting Level:");
        chkBxWeaponStartLvl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponStartLvlItemStateChanged(evt);
            }
        });

        chkBxWeaponUnlockLvl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponUnlockLvl.setSelected(true);
        chkBxWeaponUnlockLvl.setText("Unlocking Level:");
        chkBxWeaponUnlockLvl.setToolTipText("");
        chkBxWeaponUnlockLvl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponUnlockLvlItemStateChanged(evt);
            }
        });

        spnWeaponUnlockLvl.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        spnWeaponAOE.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        chkBxWeaponAOE.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponAOE.setSelected(true);
        chkBxWeaponAOE.setText("Area of Effect:");
        chkBxWeaponAOE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponAOEItemStateChanged(evt);
            }
        });

        chkBxWeaponRange.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkBxWeaponRange.setSelected(true);
        chkBxWeaponRange.setText("Attack Range:");
        chkBxWeaponRange.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBxWeaponRangeItemStateChanged(evt);
            }
        });

        spnWeaponRange.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnSaveWeapon.setText("Save Weapon Class");

        lblWeaponClassSelect.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblWeaponClassSelect.setText("Select a class:");

        btnWeaponImportJson.setText("Import JSON Weapon Data");

        btnWeaponExportJson.setText("Export JSON Weapon Data");

        javax.swing.GroupLayout WeaponsTabLayout = new javax.swing.GroupLayout(WeaponsTab);
        WeaponsTab.setLayout(WeaponsTabLayout);
        WeaponsTabLayout.setHorizontalGroup(
            WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WeaponsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(WeaponsTabLayout.createSequentialGroup()
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                                        .addComponent(lblWeaponClassName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtWeaponClassName))
                                    .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(WeaponsTabLayout.createSequentialGroup()
                                            .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(chkBxWeaponHits, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(chkBxWeaponDmg, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(spnWeaponDmg, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                                .addComponent(spnWeaponHits)))
                                        .addGroup(WeaponsTabLayout.createSequentialGroup()
                                            .addComponent(chkBxWeaponStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(spnWeaponStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkBxWeaponAOE, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkBxWeaponRange, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkBxWeaponUnlockLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spnWeaponRange, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnWeaponAOE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnWeaponUnlockLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblCharacterClass1)
                            .addComponent(lblWeaponAttributes)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWeaponClassSelect)
                            .addGroup(WeaponsTabLayout.createSequentialGroup()
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnLoadWeaponClass, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                    .addComponent(cmBxWeaponClassSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(btnWeaponImportJson, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlWeaponSpritePreview, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(btnAddWeaponAppearance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelWeaponAppearance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WeaponsTabLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                                        .addComponent(lblWeaponAppareanceLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(lblWeaponAppearance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmBxWeaponAppearanceLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmBxWeaponAppearance, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6))))
                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnWeaponExportJson, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        WeaponsTabLayout.setVerticalGroup(
            WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WeaponsTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                        .addComponent(lblCharacterClass1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWeaponClassSelect)
                        .addGap(8, 8, 8)
                        .addComponent(cmBxWeaponClassSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLoadWeaponClass)
                            .addComponent(btnWeaponImportJson))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWeaponAttributes)
                        .addGap(18, 18, 18)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeaponClassName)
                            .addComponent(txtWeaponClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkBxWeaponDmg)
                            .addComponent(spnWeaponRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxWeaponRange)
                            .addComponent(spnWeaponDmg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnWeaponHits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxWeaponHits)
                            .addComponent(spnWeaponAOE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxWeaponAOE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnWeaponStartLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxWeaponStartLvl)
                            .addComponent(spnWeaponUnlockLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkBxWeaponUnlockLvl)))
                    .addGroup(WeaponsTabLayout.createSequentialGroup()
                        .addComponent(pnlWeaponSpritePreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmBxWeaponAppearance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWeaponAppearance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmBxWeaponAppearanceLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWeaponAppareanceLvl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddWeaponAppearance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelWeaponAppearance))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(WeaponsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveWeapon)
                    .addComponent(btnWeaponExportJson))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        JTabbedPane.addTab("Weapons", WeaponsTab);

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JTabbedPane)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JTabbedPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listClassWeaponsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listClassWeaponsValueChanged
        btnDelWeapon.setEnabled(listClassWeapons.getSelectedIndex() > -1);
    }//GEN-LAST:event_listClassWeaponsValueChanged

    private void listWeaponsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listWeaponsValueChanged
        btnAddWeapon.setEnabled(listWeapons.getSelectedIndex() > -1);
    }//GEN-LAST:event_listWeaponsValueChanged

    private void chkBxCharUnlockLvlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharUnlockLvlItemStateChanged
        spnCharUnlockLvl.setEnabled(chkBxCharUnlockLvl.isSelected());
    }//GEN-LAST:event_chkBxCharUnlockLvlItemStateChanged

    private void chkBxCharStartLvlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharStartLvlItemStateChanged
        spnCharStartLvl.setEnabled(chkBxCharStartLvl.isSelected());
    }//GEN-LAST:event_chkBxCharStartLvlItemStateChanged

    private void chkBxCharTilesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharTilesItemStateChanged
        spnCharTiles.setEnabled(chkBxCharTiles.isSelected());
    }//GEN-LAST:event_chkBxCharTilesItemStateChanged

    private void chkBxCharHitsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharHitsItemStateChanged
        spnCharHits.setEnabled(chkBxCharHits.isSelected());
    }//GEN-LAST:event_chkBxCharHitsItemStateChanged

    private void chkBxCharCostItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharCostItemStateChanged
        spnCharCost.setEnabled(chkBxCharCost.isSelected());
    }//GEN-LAST:event_chkBxCharCostItemStateChanged

    private void chkBxCharHealthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxCharHealthItemStateChanged
        spnCharHealth.setEnabled(chkBxCharHealth.isSelected());
    }//GEN-LAST:event_chkBxCharHealthItemStateChanged

    private void chkBxWeaponDmgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponDmgItemStateChanged
        spnWeaponDmg.setEnabled(chkBxWeaponDmg.isSelected());
    }//GEN-LAST:event_chkBxWeaponDmgItemStateChanged

    private void chkBxWeaponHitsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponHitsItemStateChanged
        spnWeaponHits.setEnabled(chkBxWeaponHits.isSelected());
    }//GEN-LAST:event_chkBxWeaponHitsItemStateChanged

    private void chkBxWeaponStartLvlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponStartLvlItemStateChanged
        spnWeaponStartLvl.setEnabled(chkBxWeaponStartLvl.isSelected());
    }//GEN-LAST:event_chkBxWeaponStartLvlItemStateChanged

    private void chkBxWeaponUnlockLvlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponUnlockLvlItemStateChanged
        spnWeaponUnlockLvl.setEnabled(chkBxWeaponUnlockLvl.isSelected());
    }//GEN-LAST:event_chkBxWeaponUnlockLvlItemStateChanged

    private void chkBxWeaponAOEItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponAOEItemStateChanged
        spnWeaponAOE.setEnabled(chkBxWeaponAOE.isSelected());
    }//GEN-LAST:event_chkBxWeaponAOEItemStateChanged

    private void chkBxWeaponRangeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBxWeaponRangeItemStateChanged
        spnWeaponRange.setEnabled(chkBxWeaponRange.isSelected());
    }//GEN-LAST:event_chkBxWeaponRangeItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CharactersTab;
    private javax.swing.JTabbedPane JTabbedPane;
    private javax.swing.JPanel WeaponsTab;
    protected javax.swing.JButton btnAddCharAppearance;
    protected javax.swing.JButton btnAddWeapon;
    protected javax.swing.JButton btnAddWeaponAppearance;
    protected javax.swing.JButton btnCharCreateObject;
    protected javax.swing.JButton btnCharExportJson;
    protected javax.swing.JButton btnCharImportJson;
    protected javax.swing.JButton btnCharSaveClass;
    protected javax.swing.JButton btnDelCharAppearance;
    protected javax.swing.JButton btnDelWeapon;
    protected javax.swing.JButton btnDelWeaponAppearance;
    protected javax.swing.JButton btnLoadCharClass;
    protected javax.swing.JButton btnLoadWeaponClass;
    protected javax.swing.JButton btnSaveWeapon;
    protected javax.swing.JButton btnWeaponExportJson;
    protected javax.swing.JButton btnWeaponImportJson;
    protected javax.swing.JCheckBox chkBxCharCost;
    protected javax.swing.JCheckBox chkBxCharHealth;
    protected javax.swing.JCheckBox chkBxCharHits;
    protected javax.swing.JCheckBox chkBxCharStartLvl;
    protected javax.swing.JCheckBox chkBxCharTiles;
    protected javax.swing.JCheckBox chkBxCharUnlockLvl;
    protected javax.swing.JCheckBox chkBxWeaponAOE;
    protected javax.swing.JCheckBox chkBxWeaponDmg;
    protected javax.swing.JCheckBox chkBxWeaponHits;
    protected javax.swing.JCheckBox chkBxWeaponRange;
    protected javax.swing.JCheckBox chkBxWeaponStartLvl;
    protected javax.swing.JCheckBox chkBxWeaponUnlockLvl;
    protected javax.swing.JComboBox<String> cmBxCharAppearance;
    protected javax.swing.JComboBox<String> cmBxCharAppearanceLvl;
    protected javax.swing.JComboBox<String> cmBxCharClassSelect;
    protected javax.swing.JComboBox<String> cmBxWeaponAppearance;
    protected javax.swing.JComboBox<String> cmBxWeaponAppearanceLvl;
    protected javax.swing.JComboBox<String> cmBxWeaponClassSelect;
    protected javax.swing.JLabel lblCharSpritePreview;
    private javax.swing.JLabel lblWeaponClassSelect;
    private javax.swing.JLabel lblWeaponClassSelect1;
    protected javax.swing.JLabel lblWeaponSpritePreview;
    protected javax.swing.JList<String> listClassWeapons;
    protected javax.swing.JList<String> listWeapons;
    protected javax.swing.JPanel pnlCharSpritePreview;
    protected javax.swing.JPanel pnlWeaponSpritePreview;
    protected javax.swing.JSpinner spnCharCost;
    protected javax.swing.JSpinner spnCharHealth;
    protected javax.swing.JSpinner spnCharHits;
    protected javax.swing.JSpinner spnCharStartLvl;
    protected javax.swing.JSpinner spnCharTiles;
    protected javax.swing.JSpinner spnCharUnlockLvl;
    protected javax.swing.JSpinner spnWeaponAOE;
    protected javax.swing.JSpinner spnWeaponDmg;
    protected javax.swing.JSpinner spnWeaponHits;
    protected javax.swing.JSpinner spnWeaponRange;
    protected javax.swing.JSpinner spnWeaponStartLvl;
    protected javax.swing.JSpinner spnWeaponUnlockLvl;
    protected javax.swing.JTextField txtCharClassName;
    protected javax.swing.JTextField txtWeaponClassName;
    // End of variables declaration//GEN-END:variables
}
